# dbg@n132
target remote :1234
set $VM=0xffff888000000000
set $BASE=0xffffffff81000000
set $PAGE=0xffffea0000000000
define p2v
    p/x ($arg0-$PAGE)*0x40+$VM
end
define v2p
    p/x ($arg0-$VM)/0x40+$PAGE
end
define pgt
    set $addr = $arg0
    # printf "Address: \t%p\n", $addr
    # printf "$CR3: \t\t%p\n", $cr3
    set $pgd_off = ($addr >> 39) & 0x1ff
    set $pud_off = ($addr >> 30) & 0x1ff
    set $pmd_off = ($addr >> 21) & 0x1ff
    set $pt_off  = ($addr >> 12) & 0x1ff
    printf "PGD(%p)\\Offset(%p):\n", $cr3, $pgd_off
    x/8gx $pgd_off*8+$VM+$cr3
    set $pud =  *(unsigned long long *)($pgd_off * 8 + (($cr3>>12)<<12) +$VM) 

    printf "PUD(%p)\\Offset(%p):\n", (($pud>>12)<<12),$pud_off
    set $pmd =  *(unsigned long long *)($pud_off * 8 + (($pud>>12)<<12) +$VM) 
    x/8gx ($pud_off * 8 + (($pud>>12)<<12) +$VM) 

    if ($pmd&(1<<7))==0
        printf "PMD(%p)\\Offset(%p):\n", (($pmd>>12)<<12), $pmd_off
        set $pt =  *(unsigned long long *)($pmd_off * 8 + (($pmd>>12)<<12) +$VM) 
        x/8gx ($pmd_off * 8 + (($pmd>>12)<<12) +$VM) 
        if ($pt&(1<<7))==0
            printf "PT(%p)\\Offset(%p):\n", (($pt>>12)<<12),$pt_off
            set $phys_addr =  *(unsigned long long *)($pt_off * 8 + (($pt>>12)<<12) +$VM) 
            x/8gx ($pt_off * 8 + (($pt>>12)<<12) +$VM) 
            printf "Content:\n"
            x/8gx (($phys_addr<<1>>1)>>12<<12)+$VM
        else
            printf "Huge Page (0x200,000 Pages):\n"
            set $offset = $addr & ((1<<21)-1)
            set $pt = ($pt<<1>>1)
            set $phys_addr = (($pt>>21)<<21) + $offset
            printf "Content:\n"
            x/8gx $phys_addr+$VM
        end
    else
        printf "Huge Page (0x40,000,000 Pages):\n"
        printf "@n132 was too lazy to imp"
    end
end
b xdp_umem_addr_map
